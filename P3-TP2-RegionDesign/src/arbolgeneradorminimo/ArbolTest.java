package arbolgeneradorminimo;

import static org.junit.Assert.*;

import org.junit.Test;

public class ArbolTest {

	public boolean todosTrue(boolean[] arr) {
		for (int i = 0; i < arr.length; i++) {
			System.out.println(arr[i]);
			  if (!arr[i])
				  return false;
			}
			return true;
	}

	@Test
	public void cantidadDeVerticesTest() {
		int[][] grafoArgentina = {
				{0,63,0,0,0,22,0,61,0,0,52,0,0,0,0,70,0,0,0,0,23,0,0,0},
				{63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,58,0,0,0,0,0,69,0,0,0,0,45,0,0,0,0,28,0,20},
				{0,0,0,0,0,0,23,0,33,0,0,0,0,0,0,0,69,0,0,0,32,26,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,66,0,0,0,0},
				{22,0,58,0,0,0,0,0,0,0,44,35,0,0,0,0,0,0,55,0,69,39,0,0},
				{0,0,0,23,0,0,0,41,0,0,0,0,0,51,0,0,0,0,0,0,30,0,0,0},
				{61,0,0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0,0},
				{0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0},
				{52,0,0,0,0,44,0,0,0,0,0,0,34,0,60,46,0,0,27,0,0,0,0,0},
				{0,0,69,0,0,35,0,0,0,0,0,0,0,0,0,0,0,55,69,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,34,0,0,0,61,0,0,69,30,0,0,0,0,0},
				{0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,60,0,61,0,0,33,0,0,0,0,0,0,0,0},
				{70,0,0,0,70,0,0,0,0,0,46,0,0,0,33,0,0,0,0,0,0,0,0,0},
				{0,0,45,69,0,0,0,0,50,49,0,0,0,0,0,0,0,0,0,0,0,22,0,51},
				{0,0,0,0,0,0,0,0,0,0,0,55,69,0,0,0,0,0,32,0,0,0,0,0},
				{0,0,0,0,0,55,0,0,0,0,27,69,30,0,0,0,0,32,0,0,0,0,0,0},
				{0,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0},
				{23,0,0,32,0,69,30,46,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0},
				{0,0,28,26,0,39,0,0,0,0,0,0,0,0,0,0,22,0,0,0,37,0,0,54},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,0},
				{0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0,0,0,0,54,0,0},
		};
		
		//AGM.arbolGeneradorMinimo(grafoArgentina, 2);
		ArbolGeneradorMinimo.primMST();
		assertEquals(AGM.verticesAGM.length, grafoArgentina.length);
		
	}
	
	@Test
	public void cantidadDeAristasTest() {
		int[][] grafoArgentina = {
				{0,63,0,0,0,22,0,61,0,0,52,0,0,0,0,70,0,0,0,0,23,0,0,0},
				{63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,58,0,0,0,0,0,69,0,0,0,0,45,0,0,0,0,28,0,20},
				{0,0,0,0,0,0,23,0,33,0,0,0,0,0,0,0,69,0,0,0,32,26,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,66,0,0,0,0},
				{22,0,58,0,0,0,0,0,0,0,44,35,0,0,0,0,0,0,55,0,69,39,0,0},
				{0,0,0,23,0,0,0,41,0,0,0,0,0,51,0,0,0,0,0,0,30,0,0,0},
				{61,0,0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0,0},
				{0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0},
				{52,0,0,0,0,44,0,0,0,0,0,0,34,0,60,46,0,0,27,0,0,0,0,0},
				{0,0,69,0,0,35,0,0,0,0,0,0,0,0,0,0,0,55,69,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,34,0,0,0,61,0,0,69,30,0,0,0,0,0},
				{0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,60,0,61,0,0,33,0,0,0,0,0,0,0,0},
				{70,0,0,0,70,0,0,0,0,0,46,0,0,0,33,0,0,0,0,0,0,0,0,0},
				{0,0,45,69,0,0,0,0,50,49,0,0,0,0,0,0,0,0,0,0,0,22,0,51},
				{0,0,0,0,0,0,0,0,0,0,0,55,69,0,0,0,0,0,32,0,0,0,0,0},
				{0,0,0,0,0,55,0,0,0,0,27,69,30,0,0,0,0,32,0,0,0,0,0,0},
				{0,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0},
				{23,0,0,32,0,69,30,46,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0},
				{0,0,28,26,0,39,0,0,0,0,0,0,0,0,0,0,22,0,0,0,37,0,0,54},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,0},
				{0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0,0,0,0,54,0,0},
		};
		
		AGM.arbolGeneradorMinimo(grafoArgentina, 2);
		//System.out.println(AGM.verticesVisitados);
		//assertEquals(AGM.verticesAGM.length, grafoArgentina.length);
		assertTrue(todosTrue(AGM.verticesVisitados));
	}

}
